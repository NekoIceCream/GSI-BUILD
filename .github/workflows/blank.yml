# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell

      - name: install repo command
        run: |
          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
    
      - name: Install SDK
        run: |
          wget https://dl.google.com/android/repository/platform-tools-latest-linux.zip
          unzip platform-tools-latest-linux.zip -d ~
          export PATH="$HOME/bin:$HOME/platform-tools:$PATH"

      - name: Checking repo command
        run: repo --help

      - name: Install requirement packages
        run: sudo apt install bc bison build-essential curl flex g++-multilib gcc-multilib git gnupg gperf libxml2 lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev imagemagick git lunzip lzop schedtool squashfs-tools xsltproc zip zlib1g-dev openjdk-8-jdk python perl xmlstarlet virtualenv xz-utils rr jq libncurses5 pngcrush lib32ncurses5-dev git-lfs libxml2 openjdk-11-jdk-headless
  
      - name: setup git
        run: |
          git config --global user.name "NekoIceCream"
          git config --global user.email "NekoIceCream@outlook.co.id"
          
      - name: start building
        run: |
          cd ~
          mkdir lineage-19.x-build-gsi
          cd lineage-19.x-build-gsi
          repo init -u https://github.com/LineageOS/android.git -b lineage-19.1
          git clone https://github.com/AndyCGYan/lineage_build_unified lineage_build_unified -b lineage-19.1
          git clone https://github.com/AndyCGYan/lineage_patches_unified lineage_patches_unified -b lineage-19.1
          bash lineage_build_unified/buildbot_unified.sh treble A64B A64BG 64B 64BG
          
      - name: upload build 
        run: ls ~/build-output
          
          
